9.11 수

2
.class = byte로 작성댐.  그건 jvm에 저장됨.

hello.java - hello 가 클래스 
public 붙여야댐 왜냐 내가 다른 파일에서 이 클래스를 접근할 수 있다라는 의미
static  정적

public static void 꼭 작성.
다른 클래스에서도 

4
System.out.println("Hello");
이게 출력

6
식별자
_, $ 사용가능
한글 사용가능
키워드(if, for) 사용 불가능

7
예시

9
가독성 높은 이름 붙이기
클래스는 대문자로 시작
의미가 변하면 대문자
변수는 소문자 의미가 변하면 대문자 
상수는 대문자

10
기본타입은 메모리에 내 데이터가 들어간다
기본타입에 none 불가능
레퍼런스는 주소다.
레퍼런스에 none 가능

11
string은 레퍼런스 타입

15
리터럴 정수
기본은 10진수
0으로 시작하면 8진수

19
null 리터럴

20
숫자 사이에 _ 넣기 가능

21
변수 타입 선언 대신 var 써도 됨.

22
상수 앞에 final 키워드
상수는 대문자쓰기

23
파일 이름은 CilcleArea.java
파일을 실행하려면 jvm을 이용함

24
작은 타입은 큰 타입으로 자동 변환
double*int - > int가 더블로 자동 변환댐

26
byte(b+i) 뭔가 안맞아서 엉뚱한 -29가 나옴.
-256~257   ???


9.20 금
5
for 문 {} 있어야댐.
for 문 밑에 한줄만 쓸거면 {} 없어도 되긴함  그래도 {} 쓰자
int i 따로 안쓰고 합친 for문 많이 씀
초기식에 변수 여러개 넣을 수도 있음

6
조건에 true 넣으면 무한 반복
조건 비어있는 것도 true로 간주- 무한반복


42
객체(주소)로 배열을 찾는건 이해함.
근데 main() arg.. 이건 뭔말임?

10.01
멤버
필드
파라미터
this는 생성자에서 새로 만들어지는걸 구분하기 위함.
변수(클래스) 객체 생성자

10.02 실습
실습1
두 점 사이의 거리를 계산하라 = p1 vs p2, p2 vs p3, p1 vs p3다 계산하고, 그 중 가장 짧은 거리를 출력해라.
실습2
this가 나오게 코딩해라. this없이 하면 안됨


10.04
객체와 객체의 공통점인 인터페이스로 다형성 구현 가능
다형성의 두번쨰 의미: 객체끼리 인터페이스(추상화)공유
추상화는 상속의 역?
클래스가 다른 클래스를 소유 = 컴포지션
상속=  is a= 타이트결합=인터페이스 공유=실행 도중 못바꿈
컴포지션=has a = 루즈 결합= 메이플에서 무기가 총에서 칼로 바뀐느낌, 즉 실행 도중에도 소유한 클래스 바뀔수 있음

상속  컴포지션
클래스
변수(클래스) 객체(추상화) 생성자

SRP 
17쪽에서 오타. 첫번째가 '원칙을 따르지 않음'
보통 클래스 안에는 출력이 밖으로 따로 빠져야됨. 순수 기능만 추구

Open Close Principle
Animal 클래스(확장)에서는 수정 가능 (개방)
zoo 클래스(수정)에서는 수정 안해도 됨(폐쇄)

Dependency inversion Principle
원래 zoo 는 cat, dog이랑 의존관계
이걸 Animal<-cat
                 <-dog 
      Animal<-zoo    이렇게 새로운 의존관계를 만들면
cat, dog, zoo는 is-a관계가 됨. 
즉 animal.speak를 새로운 다형성으로 만들기 가능

Liskov
아하
관련없는 걸 상속받게 하지말자.

interface segreation
추상화는 꼭 필요한 것만 하자.
추상화를 굳이 한번에 안해도 됨. 쪼개서 해도 됨. 그게 SEGREATION

클래스 앞에는 public, 디폴트만 붙이기 가능
static 멤버는 heap아니고 정적영역에 저장
13쪽
?
16쪽
?
Staticsampel.m=10 중요
오타있음. 최종 실행결과는 5.
17쪽
인스턴스 없어도 됨.

10.18 상속 강의
웬만하면 상속을 깊이 하지 않기.
A와 B는 C에게 동시에 상속안됨
가능하게 하려면, 하나를 인터페이스로 하거나(구현안함), 하나를 선언만하고 구현은 C에서 함
상속은 한쪽방향으로만 함. 양방향 안됨(다중상속 안됨)(부모가 2개이상 안됨)(다이아몬드문제)
구현이 된걸 상속받냐, 뼈대만있고 구현안된걸 물려받냐로 클래스/인터페이스 상속여부 갈림 근데 다형성은 둘다 유지

17
슈퍼클래스에 인자가 있는 생성자가 하나만 있을때, 상속될때 오류 발생함. 기본생성자 안생김
23
업캐스팅
버려지는게 아님. 접근만 슈퍼클래스 범위내에서만 가능한것
다운캐스팅하면 원래 객체 다 불러올 수 있음 단 여기서 괄호 주의
27
그래서 instanceof로 업캐스팅된게 원래 객체가 뭔지 판단 가능
30
int은 instanceof 가능
string은 instanceof가능
31
중요. 객체를 뭘 넣느냐에 따라 p의 성향이 바뀜.???
32
동적바인딩..????
: 업캐스팅을 해도, shape호출 아니고 오버라이딩된 메소드 호출
35
오버라이팅은 다형성 실현
36
이해불가. 매우중요. 
open-closed
오버라이딩 오버로딩 다름.
38
여기서 강의끝.

1030 과제팁
실습1: 뱅크트랜스퍼페이먼트 클래스를 따로 만들라.
실습2: 페이먼트프로세서 클래스에서 추상화해서 
 그 위에 있는 클래스를 만들라.

11.01 금
추상클래스
중간에 갑자기 33쪽 넘어감. draw 얘기 부터
이후 47쪽
54
상수 추상메소드만 중요. 다른건 안중요



1030 과제팁
실습1: 뱅크트랜스퍼페이먼트 클래스를 따로 만들라.
실습2: 페이먼트프로세서 클래스에서 추상화해서 
 그 위에 있는 클래스를 만들라.

실습 1: 결제 방식 프로그램 작성

문제 설명:

▶ 아래의 코드는 현재 Credit CardPayment와 PayPalment 결제 방식만 처리하고 있다. 새 결제 방식인 BankTransferPayment 를 사용할 수 있도록 수정하라.


-BankTransferPayment 클래스를 작성하고, pay 메서드 구현


-PaymentProcessor 클래스 내에 BankTransferPayment 결제방법이 동작하도록 코드 수정

-테스트






실습 2: 결제 방식 프로그램 작성(다형성 적용)



문제 설명:

▶ 실습 1은 각 결제 방식(CreditCardPayment, PayPalPayment, BankTransferPayment)이 개별 클래스로 구현되어 있고, PaymentProcessor 클래스는 각 결제 방식에 의존한다. 새로운 결제방식이 추가될 때 마다

PaymentProcessor를 수정해야 한다. 의존성을 낮추기 위하여 다형성을 이용하여 더 유연한 구조를 구현하고자 한다.


-개별 결제방식을 추상화하여 PaymentMethod 클래스를 작성

-CreditCardPayment, PayPalPayment, BankTransferPayment 클래스는 PaymentMethod 클래스를 상속

-pay() 메서드를 오버라이딩

-PaymentProcessor가 구체적인 결제 방식에 직접 의존하지 않고, 추상화된 PaymentMethod 타입을 매개변수로 넘겨받아 PaymentProcessor 메서드 완성

추가 문제: 실습 2를 통하여 SOLID원칙 중 어떤 원칙이 적용되었고, 개선된 코드가 어떤 면에서 더 유연성을 가지는지 작성하시오.


1108 강의
8
패키지 만들때 1패키지당 1클래스 추천
28
toString()
equals(Object odj)
이것들 매우매우 중요.
29
obj.toString()
obj 
둘다 출력이같?

9
스윙특징)앞에 J붙어있음
Jframe이 도화지. 제일중요

1115 강의
3
링크드리스트: 상수시간에 연산
어레이리스트: n번시간 연산 걸림
어레이리스트와 벡터 차이: 스레드의 사용 여부
set=집합. 리스트와 다른 점은 순서가없다
E:엘리멘트 = 객체 타입만 와야됨. 인트, 더블..이런거 안됨
K:키
V:벨류

6
iterable : 다형성 구현 가능
RandomAccess: RAM. 힙영역에서 자동으로 새로운줄의 공간 마련해줌

24
이터레이터 중요
26
해시맵
33
링크드리스트
37
<T>
41
여기까지 하고 나머지는 응~그냥 넘어감~ 

gui pdf
1
이벤트: 마우스, 키보드 등의 입력
5
이벤트소스ㅡ이벤트객체ㅡ이벤트리스너
13 
이벤트 리스너 만들기방법 3가지
1.독립클래스
2. 내부클래스..??? 녹음 듣자
3. 익명클래스...??? 녹음 듣자

20
어댑터
뭔말이지?? 녹음 고

24
키 이벤트와 포커스..??


과제최종

1. 객체 지향 기반의 효율적인 코드 개선:
solid 원칙에서 적용 덜 된 부분, 비효율적인 부분을
새로운 클래스, 새로운 코드 등으로 고치기
2. 기능의 개선-세모 그리기, 별 그리기, 프리라인 그리기, 지우개 기능, , 뒤로가기, 앞으로가기
배경 색 채우기, 그려진 도형을 90도씩 회전시키기Editor 이름은 별로  안중요. 바꿔도 됌

